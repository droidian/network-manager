From 3dab0094b2296e07d8ccc3e80025b88a2f493f95 Mon Sep 17 00:00:00 2001
From: Dan Williams <dcbw@redhat.com>
Date: Tue, 7 May 2013 15:22:55 -0500
Subject: [PATCH 2/3] ifupdown: fix naming confusion in plugin hash tables

well_known_interfaces -> eni_ifaces, since it's a hash of any
interfaces read from /etc/network/interfaces.

well_known_ifaces -> kernel_ifaces, since it's a hash of any
network subsystem interface the kernel knows about
---
 src/settings/plugins/ifupdown/plugin.c |   48 ++++++++++++++++++--------------
 1 file changed, 27 insertions(+), 21 deletions(-)

diff --git a/src/settings/plugins/ifupdown/plugin.c b/src/settings/plugins/ifupdown/plugin.c
index 41eec9c..8c24b2c 100644
--- a/src/settings/plugins/ifupdown/plugin.c
+++ b/src/settings/plugins/ifupdown/plugin.c
@@ -76,8 +76,14 @@ typedef struct {
 	GHashTable *connections;  /* /e/n/i block name :: NMIfupdownConnection */
 	gchar* hostname;
 
-	GHashTable *well_known_interfaces;
-	GHashTable *well_known_ifaces;
+	/* Stores all blocks/interfaces read from /e/n/i regardless of whether
+	 * there is an NMIfupdownConnection for block.
+	 */
+	GHashTable *eni_ifaces;
+
+	/* Stores any network interfaces the kernel knows about */
+	GHashTable *kernel_ifaces;
+
 	gboolean unmanage_well_known;
 	char *conf_file;
 
@@ -244,13 +250,13 @@ udev_device_added (SCPluginIfupdown *self, GUdevDevice *device)
 	 * we want to either unmanage the device or lock it
 	 */
 	exported = g_hash_table_lookup (priv->connections, iface);
-	if (!exported && !g_hash_table_lookup (priv->well_known_interfaces, iface)) {
+	if (!exported && !g_hash_table_lookup (priv->eni_ifaces, iface)) {
 		PLUGIN_PRINT("SCPlugin-Ifupdown",
 			"device added (path: %s, iface: %s): no ifupdown configuration found.", path, iface);
 		return;
 	}
 
-	g_hash_table_insert (priv->well_known_ifaces, g_strdup (iface), g_object_ref (device));
+	g_hash_table_insert (priv->kernel_ifaces, g_strdup (iface), g_object_ref (device));
 
 	if (exported)
 		bind_device_to_connection (self, device, exported);
@@ -273,7 +279,7 @@ udev_device_removed (SCPluginIfupdown *self, GUdevDevice *device)
 	PLUGIN_PRINT("SCPlugin-Ifupdown",
 	             "devices removed (path: %s, iface: %s)", path, iface);
 
-	if (!g_hash_table_remove (priv->well_known_ifaces, iface))
+	if (!g_hash_table_remove (priv->kernel_ifaces, iface))
 		return;
 
 	if (ALWAYS_UNMANAGE || priv->unmanage_well_known)
@@ -323,11 +329,11 @@ SCPluginIfupdown_init (NMSystemConfigInterface *config)
 	if(!priv->connections)
 		priv->connections = g_hash_table_new (g_str_hash, g_str_equal);
 
-	if(!priv->well_known_ifaces)
-		priv->well_known_ifaces = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_object_unref);
+	if(!priv->kernel_ifaces)
+		priv->kernel_ifaces = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_object_unref);
 
-	if(!priv->well_known_interfaces)
-		priv->well_known_interfaces = g_hash_table_new (g_str_hash, g_str_equal);
+	if(!priv->eni_ifaces)
+		priv->eni_ifaces = g_hash_table_new (g_str_hash, g_str_equal);
 
 	PLUGIN_PRINT("SCPlugin-Ifupdown", "init!");
 
@@ -387,8 +393,8 @@ SCPluginIfupdown_init (NMSystemConfigInterface *config)
 							continue;
 						}
 						if (state == 0 && strlen (token) > 0) {
-							PLUGIN_PRINT("SCPlugin-Ifupdown", "adding bridge port %s to well_known_interfaces", token);
-							g_hash_table_insert (priv->well_known_interfaces, g_strdup (token), "known");
+							PLUGIN_PRINT("SCPlugin-Ifupdown", "adding bridge port %s to eni_ifaces", token);
+							g_hash_table_insert (priv->eni_ifaces, g_strdup (token), "known");
 						}
 					}
 					g_strfreev (port_ifaces);
@@ -415,11 +421,11 @@ SCPluginIfupdown_init (NMSystemConfigInterface *config)
 				PLUGIN_PRINT("SCPlugin-Ifupdown", "adding %s to connections", block->name);
 				g_hash_table_insert (priv->connections, block->name, exported);
 			}
-			PLUGIN_PRINT("SCPlugin-Ifupdown", "adding iface %s to well_known_interfaces", block->name);
-			g_hash_table_insert (priv->well_known_interfaces, block->name, "known");
+			PLUGIN_PRINT("SCPlugin-Ifupdown", "adding iface %s to eni_ifaces", block->name);
+			g_hash_table_insert (priv->eni_ifaces, block->name, "known");
 		} else if (!strcmp ("mapping", block->type)) {
-			g_hash_table_insert (priv->well_known_interfaces, block->name, "known");
-			PLUGIN_PRINT("SCPlugin-Ifupdown", "adding mapping %s to well_known_interfaces", block->name);
+			g_hash_table_insert (priv->eni_ifaces, block->name, "known");
+			PLUGIN_PRINT("SCPlugin-Ifupdown", "adding mapping %s to eni_ifaces", block->name);
 		}
 	next:
 		block = block->next;
@@ -537,9 +543,9 @@ SCPluginIfupdown_get_unmanaged_specs (NMSystemConfigInterface *config)
 		return NULL;
 
 	PLUGIN_PRINT("Ifupdown", "get unmanaged devices count: %d",
-	             g_hash_table_size (priv->well_known_ifaces));
+	             g_hash_table_size (priv->kernel_ifaces));
 
-	g_hash_table_iter_init (&iter, priv->well_known_ifaces);
+	g_hash_table_iter_init (&iter, priv->kernel_ifaces);
 	while (g_hash_table_iter_next (&iter, NULL, &value)) {
 		GUdevDevice *device = G_UDEV_DEVICE (value);
 		const char *address;
@@ -685,11 +691,11 @@ GObject__dispose (GObject *object)
 	if (priv->inotify_system_hostname_wd >= 0)
 		nm_inotify_helper_remove_watch (inotify_helper, priv->inotify_system_hostname_wd);
 
-	if (priv->well_known_ifaces)
-		g_hash_table_destroy(priv->well_known_ifaces);
+	if (priv->kernel_ifaces)
+		g_hash_table_destroy(priv->kernel_ifaces);
 
-	if (priv->well_known_interfaces)
-		g_hash_table_destroy(priv->well_known_interfaces);
+	if (priv->eni_ifaces)
+		g_hash_table_destroy(priv->eni_ifaces);
 
 	g_free (priv->conf_file);
 
-- 
1.7.10.4

